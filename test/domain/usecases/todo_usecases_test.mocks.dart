// Mocks generated by Mockito 5.4.5 from annotations
// in todo_app/test/domain/usecases/todo_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_app/core/result/result.dart' as _i2;
import 'package:todo_app/domain/entities/todo_entity.dart' as _i5;
import 'package:todo_app/domain/repositories/todo_repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TodoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRepository extends _i1.Mock implements _i3.TodoRepository {
  MockTodoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<List<_i5.TodoEntity>>> getTodos() =>
      (super.noSuchMethod(
            Invocation.method(#getTodos, []),
            returnValue: _i4.Future<_i2.Result<List<_i5.TodoEntity>>>.value(
              _FakeResult_0<List<_i5.TodoEntity>>(
                this,
                Invocation.method(#getTodos, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<_i5.TodoEntity>>>);

  @override
  _i4.Future<_i2.Result<_i5.TodoEntity>> getTodoById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTodoById, [id]),
            returnValue: _i4.Future<_i2.Result<_i5.TodoEntity>>.value(
              _FakeResult_0<_i5.TodoEntity>(
                this,
                Invocation.method(#getTodoById, [id]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<_i5.TodoEntity>>);

  @override
  _i4.Future<_i2.Result<_i5.TodoEntity>> createTodo(String? title) =>
      (super.noSuchMethod(
            Invocation.method(#createTodo, [title]),
            returnValue: _i4.Future<_i2.Result<_i5.TodoEntity>>.value(
              _FakeResult_0<_i5.TodoEntity>(
                this,
                Invocation.method(#createTodo, [title]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<_i5.TodoEntity>>);

  @override
  _i4.Future<_i2.Result<_i5.TodoEntity>> updateTodo(_i5.TodoEntity? todo) =>
      (super.noSuchMethod(
            Invocation.method(#updateTodo, [todo]),
            returnValue: _i4.Future<_i2.Result<_i5.TodoEntity>>.value(
              _FakeResult_0<_i5.TodoEntity>(
                this,
                Invocation.method(#updateTodo, [todo]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<_i5.TodoEntity>>);

  @override
  _i4.Future<_i2.Result<bool>> deleteTodo(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTodo, [id]),
            returnValue: _i4.Future<_i2.Result<bool>>.value(
              _FakeResult_0<bool>(this, Invocation.method(#deleteTodo, [id])),
            ),
          )
          as _i4.Future<_i2.Result<bool>>);
}
